<div id="result_output">
	
</div>

<div class="content">
	
	<div class="alert-message error" style="display:none;" data-alert="alert" id="cred_alert">
		<a class="close" href="#">Ã—</a>
		<p><strong>Error!</strong> You need to provide valid Salesforce.com credentials in Project Details.</p>
	</div>
	
	<ul class="tabs">
		<li class="active"><a href="#form">Destination</a></li>
		<li><a href="#metadata">Metadata</a></li>
		<li><a href="#result" id="result_tab">Result</a></li>
	</ul>
	
	<div class="pill-content">
		<div id="form" class="active">
			<form class="form-stacked">
				<fieldset>
					<div class="clearfix">
						<label for="un">Salesforce Username</label> 
						<input class="xlarge" size="100" type="text" id="un">
					</div>
					<div class="clearfix">
						<label for="pw">Salesforce Password</label> 
						<input class="xlarge" size="100" type="password" id="pw">
					</div>
					<div class="clearfix">
						<label for="server_url">Server URL</label> 
						<select id="server_url">
							<option>https://www.salesforce.com</option>
							<option>https://test.salesforce.com</option>
						</select>
					</div>				
				</fieldset>
			</form>
			<form>
				<fieldset style="margin:0;padding-top:0px;">
					<div class="clearfix">
						<label for="check_only" style="width:100px;font-weight:bold;">Validate Only</label> 
						<div class="input" style="margin-left: 120px;">
							<input type="checkbox" id="check_only" style="margin:0px;width:32px;"/>
						</div>
					</div>
				</fieldset>
			</form>
		</div>
				
		<div id="metadata">
			<div id="project_wrapper">
				<!--
				<div id="filter">
					<input type="text" id="txtFilter"/>
				</div>
				-->
				<div id="treewrapper">
					<div id="tree">
						<ul>
						<% meta_array.each do |hash| %>
							<% 
								next if !hash[:children]
								next if hash[:children].size == 0
								class_name = (hash[:children] && hash[:children].size > 0) ? "folder" : "" 
							%>
							<li data="level: 1, hasChildTypes: <%=hash[:hasChildTypes]%>, inFolder: <%=hash[:inFolder]%>" id="<%= hash[:key] %>" class="folder level1"><%= hash[:title] %>					
								<% if hash[:children] %>
								<ul>
									<% hash[:children].each do |child| %>
										<% child_class_name = (child[:children] && child[:children].size > 0) ? "folder" : "" %>
										<li data="level: 2" id="<%= child[:key] %>" class="<%= child_class_name %> level2"><%= child[:title] %>
										<% if child[:children] && child[:children].size > 0 %>
											<ul>
												<% child[:children].each do |gchild| %>
													<li data="level: 3" class="level3"><%= gchild[:title] %>
														<% if gchild[:children] && gchild[:children].size > 0 %>
															<ul>
																<% gchild[:children].each do |ggchild| %>
																	<li data="level: 4" class="level4"><%= ggchild[:title] %></li>
																<% end %>
															</ul>
														<% end %>
													</li>
												<% end %>
											</ul>
										<% end %>
										</li>
									<% end %>
								</ul>
								<% end %>
							</li>
						<% end %>
						</ul>												
					</div>
					<div id="info"></div>
				</div> 
			</div>
		</div>
		
		<div id="result">
			
		</div>		
	</div>
</div> 


<form class="form-stacked" id="action_buttons">
	<fieldset style="padding-top:0px;">
		<div class="actions">					
			<input type="button" class="btn primary" value="Deploy to Server"  onclick='insertChangeset()'>
			&nbsp;
			<button type="reset" class="btn" onclick="window.close();">Cancel</button>
		</div>
	</fieldset>
</form>


<script>
	var child_def = {}
    <%- child_metadata_definition.each do |child| -%>
    child_def['<%= child[:tag_name] %>'] = '<%= child[:xml_name] %>';
   	<%- end -%>
	
	function isValidateOnly() {
	    if ($("#check_only").is(":checked")) {
	        return "1";
	    } else {
	        return "0";
	    }
	}
	
	function insertChangeset() {		
		$("#result").html(
			dispatch({
			    controller: "deploy",
			    action: "deploy_metadata",
			    un: $("#un").val(),
			    pw: $("#pw").val(),
			    server_url: $("#server_url").val(),
			    check_only: isValidateOnly(),
			    tree: get_tree()  
			})
		);  
	} 
	
	function resizeWindowAfterResult() {
		window.resizeTo(800, window.innerHeight);
		window.moveTo(
			(screen.width-800)/2,
			(screen.height-document.getElementById('wrapper').offsetHeight-400)/2
	    );
	}

	$(function() {
	    //if dom elements is removed, we need to resize the window
		$( "body" ).bind(
			"DOMNodeInserted",
			function( event ) {
				if (event.target.id == "result") {
					$("#result_tab").click(); 
				    $("#result_table_wrapper").height($(window).height() - 240)
					$(window).resize(function() {
				        $("#result_table_wrapper").height($(window).height() - 240)
				    });
				    resizeWindowAfterResult();
				}
			}
		);  
	
		$('.tabs').tabs();

	    $("#project_wrapper").height($(window).height() - 175)

	    var resizeHeight = $("#form").height();
	    resizeAndCenterWindowByHeight(resizeHeight + 250);

	    $(window).resize(function() {
	        $("#project_wrapper").height($(window).height() - 175)
	    });

	    //instantiate and populate metadata tree
		$("#tree").dynatree({
			persist: false,
			checkbox: true,
			selectMode: 3
		});

	    $.expr[':'].Contains = function(a, i, m) {
	        return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase()) >= 0;
	    };

	    $("#txtFilter")
	    .change(function() {
	        var filter = $(this).val();
	        if (filter) {
	            // this finds all links in a list that contain the input,
	            // and hide the ones not containing the input while showing the ones that do
	            $(".custom1").find("a:not(:Contains(" + filter + "))").parent().parent().hide();
	            $(".custom1").find("a:Contains(" + filter + ")").parent().parent().show();
	            $(".custom1").parent().parent().prev().each(function() {
	                var node = $.ui.dynatree.getNode(this);
	                console.log(node);
	            });
	        } else {
	            $(".custom1").parent().show();
	        }
	        return false;
	    })
	    .keyup(function() {
	        // fire the above change event after every letter
	        $(this).change();
	    });

	    $("#tree").dynatree("getRoot").visit(function(node) {
	        node.expand(false);
	    });


	});   		 						
</script>